/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package component;

import entity.KhuyenMai;
import icon.FontAwesome;
import java.awt.Color;
import java.awt.Dimension;
import jiconfont.swing.IconFontSwing;
import utils.*;
import view.GD_ThanhToan;

/**
 *
 * @author Laptop
 */
public class DiscountItem extends javax.swing.JPanel {

    /**
     * Creates new form KhuyenMaiItem
     */
    private GD_ThanhToan gD_ThanhToan;
    private KhuyenMai khuyenMai;
    private int index;


    public DiscountItem(int index, int width, KhuyenMai khuyenMai) {
        this.khuyenMai = khuyenMai;
        this.index = index;
        initComponents();
        IconFontSwing.register(FontAwesome.getIconFont());
        checkbox.setBackground(new Color(0, 0, 0, 0));
        container.setBackground(new Color(0, 0, 0, 0));
        setPreferredSize(new Dimension(width, wrapper.getPreferredSize().height));
        push(khuyenMai);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wrapper = new javax.swing.JPanel();
        checkbox = new component.MyButton();
        container = new javax.swing.JPanel();
        tenKM = new javax.swing.JLabel();
        ghiChuKM = new javax.swing.JLabel();

        wrapper.setBackground(new java.awt.Color(255, 255, 255));

        checkbox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(31, 29, 43), 1, true));
        checkbox.setColorClick(new java.awt.Color(234, 124, 105));
        checkbox.setColorOver(new java.awt.Color(234, 124, 105));
        checkbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxActionPerformed(evt);
            }
        });

        tenKM.setFont(utils.AppUtils.getFont(14f, AppUtils._NORMAL_)
        );
        tenKM.setForeground(new java.awt.Color(234, 124, 105));
        tenKM.setText("Thỏa mãn cơn \"ghiền\" hải sản");

        ghiChuKM.setFont(utils.AppUtils.getFont(14f, AppUtils._ITALIC_)
        );
        ghiChuKM.setText("Giảm 20% hóa đơn toàn bộ khách hàng");

        javax.swing.GroupLayout containerLayout = new javax.swing.GroupLayout(container);
        container.setLayout(containerLayout);
        containerLayout.setHorizontalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ghiChuKM, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                    .addComponent(tenKM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        containerLayout.setVerticalGroup(
            containerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tenKM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ghiChuKM)
                .addContainerGap())
        );

        javax.swing.GroupLayout wrapperLayout = new javax.swing.GroupLayout(wrapper);
        wrapper.setLayout(wrapperLayout);
        wrapperLayout.setHorizontalGroup(
            wrapperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wrapperLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(checkbox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        wrapperLayout.setVerticalGroup(
            wrapperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wrapperLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, wrapperLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkbox, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wrapper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wrapper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxActionPerformed
        // TODO add your handling code here:
//        boolean isCheckbox = checkbox.getIcon() == null;
//        checkbox.setIcon(isCheckbox ? IconFontSwing.buildIcon(FontAwesome.CHECK, 24, new Color(31, 29, 43)) : null);
//        if (isCheckbox) {
//            gD_ThanhToan.addKM(khuyenMai);
//        } else {
//            gD_ThanhToan.removeKM(khuyenMai);
//        }
        gD_ThanhToan.setActive(index);
    }//GEN-LAST:event_checkboxActionPerformed

    public void active() {
        checkbox.setIcon(IconFontSwing.buildIcon(FontAwesome.CHECK, 24, new Color(31, 29, 43)));
        gD_ThanhToan.addKM(khuyenMai);
    }

    public void notActive() {
        checkbox.setIcon(null);
        gD_ThanhToan.removeKM(khuyenMai);
    }

    public int getIndex() {
        return this.index;
    }

    private void push(KhuyenMai khuyenMai) {
        tenKM.setText(khuyenMai.getTenKhuyenMai());
        ghiChuKM.setText(khuyenMai.getGhiChu());
    }

    public void setGDThanhToan(GD_ThanhToan gD_ThanhToan) {
        this.gD_ThanhToan = gD_ThanhToan;
    }

    public void setKM(KhuyenMai khuyenMai) {
        this.khuyenMai = khuyenMai;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private component.MyButton checkbox;
    private javax.swing.JPanel container;
    private javax.swing.JLabel ghiChuKM;
    private javax.swing.JLabel tenKM;
    private javax.swing.JPanel wrapper;
    // End of variables declaration//GEN-END:variables
}
