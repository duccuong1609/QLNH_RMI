/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package component;

import entity.HoaDon;
import icon.FontAwesome;
import java.awt.Color;
import java.awt.Dimension;
import java.rmi.RemoteException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingWorker;
import javax.swing.border.LineBorder;
import jiconfont.swing.IconFontSwing;
import view.GD_Ban;
import view.GD_DatBanTruoc;
import view.GD_DatMon;
import static utils.AppUtils.*;

/**
 *
 * @author Laptop
 */
public class BookingItem extends javax.swing.JPanel {

    /**
     * Creates new form BookingItem
     */
    private GD_DatBanTruoc GD;
    private int index;
    private HoaDon hoaDon;

    public BookingItem() {
        initComponents();
        wrapper.setPreferredSize(new Dimension(1076, 60));
    }

    public void setActive(int active) {
        if (active == index) {
            this.setBorder(new LineBorder(new Color(234, 124, 105)));
        } else {
            this.setBorder(null);
        }
    }

    public BookingItem(int index, String[] data, int width, GD_DatBanTruoc GD) {
        this.index = index;
        this.GD = GD;
        initComponents();
        setIndex(index);
        wrapper.setPreferredSize(new Dimension(width, 65));
        IconFontSwing.register(FontAwesome.getIconFont());
        btnNhanBan.setIcon(IconFontSwing.buildIcon(FontAwesome.CHECK_SQUARE_O, 40, new Color(20, 174, 92)));
        btnGoiMon.setColor(new Color(0, 0, 0, 0));
        btnSapCho.setColor(new Color(0, 0, 0, 0));
        btnNhanBan.setColor(new Color(0, 0, 0, 0));
        push(data);
    }

    public void setIndex(int index) {
        this.index = index;
    }

    public void setColorByIndex(int index) {
        Color color = index % 2 == 0 ? new Color(83, 86, 99) : new Color(31, 29, 43);
        left.setBackground(color);
        right.setBackground(color);
    }

    private void push(String[] data) {
        gioDen.setText("   " + forrmater(data[0]));
        khachHang.setText(data[1]);
        soNguoi.setText(data[2]);
        trangThai.setText(data[3]);
        datCoc.setText(data[4] + "    ");

    }

    public void setData(String[] data) {
        push(data);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wrapper = new javax.swing.JPanel();
        left = new javax.swing.JPanel();
        btnSapCho = new component.MyButton();
        btnGoiMon = new component.MyButton();
        btnNhanBan = new component.MyButton();
        gioDen = new javax.swing.JLabel();
        khachHang = new javax.swing.JLabel();
        right = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        soNguoi = new javax.swing.JLabel();
        trangThai = new javax.swing.JLabel();
        datCoc = new javax.swing.JLabel();

        wrapper.setForeground(new java.awt.Color(255, 255, 255));
        wrapper.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wrapperMouseClicked(evt);
            }
        });
        wrapper.setLayout(new java.awt.GridLayout(1, 0));

        left.setLayout(new java.awt.GridLayout(1, 5));

        btnSapCho.setBorder(null);
        btnSapCho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/table_icon.png"))); // NOI18N
        btnSapCho.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnSapCho.setMaximumSize(new java.awt.Dimension(30, 60));
        btnSapCho.setMinimumSize(new java.awt.Dimension(30, 60));
        btnSapCho.setName(""); // NOI18N
        btnSapCho.setRadius(12);
        btnSapCho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapChoActionPerformed(evt);
            }
        });
        left.add(btnSapCho);

        btnGoiMon.setBorder(null);
        btnGoiMon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/fork_icon.png"))); // NOI18N
        btnGoiMon.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnGoiMon.setMaximumSize(new java.awt.Dimension(30, 60));
        btnGoiMon.setMinimumSize(new java.awt.Dimension(30, 60));
        btnGoiMon.setName(""); // NOI18N
        btnGoiMon.setRadius(12);
        btnGoiMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoiMonActionPerformed(evt);
            }
        });
        left.add(btnGoiMon);

        btnNhanBan.setBorder(null);
        btnNhanBan.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnNhanBan.setMaximumSize(new java.awt.Dimension(30, 60));
        btnNhanBan.setMinimumSize(new java.awt.Dimension(30, 60));
        btnNhanBan.setName(""); // NOI18N
        btnNhanBan.setRadius(12);
        btnNhanBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhanBanActionPerformed(evt);
            }
        });
        left.add(btnNhanBan);

        gioDen.setFont(utils.AppUtils.getFont(16f, _NORMAL_));
        gioDen.setForeground(new java.awt.Color(255, 255, 255));
        left.add(gioDen);

        khachHang.setFont(utils.AppUtils.getFont(16f, _NORMAL_));
        khachHang.setForeground(new java.awt.Color(255, 255, 255));
        left.add(khachHang);

        wrapper.add(left);

        right.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setFont(utils.AppUtils.getFont(16f, _NORMAL_));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        right.add(jLabel1);

        soNguoi.setFont(utils.AppUtils.getFont(16f, _NORMAL_));
        soNguoi.setForeground(new java.awt.Color(255, 255, 255));
        soNguoi.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        right.add(soNguoi);

        trangThai.setFont(utils.AppUtils.getFont(16f, _NORMAL_));
        trangThai.setForeground(new java.awt.Color(255, 255, 255));
        trangThai.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        right.add(trangThai);

        datCoc.setFont(utils.AppUtils.getFont(16f, _NORMAL_));
        datCoc.setForeground(new java.awt.Color(255, 255, 255));
        datCoc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        right.add(datCoc);

        wrapper.add(right);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wrapper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wrapper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSapChoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapChoActionPerformed
        // TODO add your handling code here:
        //----------------------------------------------------------------------------------------//
        utils.AppUtils.setUI(GD.getMainJpanel(), () -> {
            GD_Ban gD_Ban;
            try {
                gD_Ban = new GD_Ban(GD.getMainJpanel(), "CHUYEN_BAN");
                gD_Ban.setHoaDon(hoaDon);
                return gD_Ban;
            } catch (RemoteException ex) {
                Logger.getLogger(BookingItem.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            return null;
        });
    }//GEN-LAST:event_btnSapChoActionPerformed

    private void wrapperMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wrapperMouseClicked
        // TODO add your handling code here:
        GD.setBookingActive(index);
        //------------------------------------------------//
        GD.setInfoForActiveItem(hoaDon);
    }//GEN-LAST:event_wrapperMouseClicked

    public void setHoaDon(HoaDon hoaDon) {
        this.hoaDon = hoaDon;
        if (hoaDon.getTrangThai().ordinal() == 1) {
            hideButton();
        }
    }

    public HoaDon getHoaDon() {
        return this.hoaDon;
    }
    private void btnNhanBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhanBanActionPerformed
        GD.setBookingActive(index);
        try {
            GD.received();
        } catch (RemoteException ex) {
            Logger.getLogger(BookingItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnNhanBanActionPerformed

    private void btnGoiMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoiMonActionPerformed
        // TODO add your handling code here:
        SwingWorker<GD_DatMon, Void> worker = new SwingWorker<GD_DatMon, Void>() {
            @Override
            protected GD_DatMon doInBackground() throws Exception {
                GD_DatMon datMon = new GD_DatMon(GD.getMainJpanel(), hoaDon.getBan(), utils.Enum.DatMon_ThemMon.THEMMON);
                return datMon;
            }

            @Override
            protected void done() {
                GD_DatMon datMon;
                try {
                    datMon = get();
                    datMon.setGd_datBan(GD);
                    btnGoiMon.setBackground(new Color(255, 255, 255, 0));
                    datMon.setBranch(utils.Enum.TypeDatMon_Branch.DAT_TRUOC_MON);
                    datMon.setHoaDon(hoaDon);
                    datMon.setBack_toUI_DatBan(true);
                    utils.AppUtils.setUI(GD.getMainJpanel(), () -> datMon);
                } catch (InterruptedException | ExecutionException ex) {
                    Logger.getLogger(BookingItem.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
        worker.execute();
    }//GEN-LAST:event_btnGoiMonActionPerformed

//    NDK: sửa Date thành LocalDateTime
    private String forrmater(String date) {
        LocalDateTime inputDateTime = LocalDateTime.parse(date, DateTimeFormatter.ISO_LOCAL_DATE_TIME);
        String formattedDateTime = inputDateTime.format(DateTimeFormatter.ofPattern("hh:mm a"));
        return formattedDateTime;
    }

    public void setTrangThai(String trangThai) {
        this.trangThai.setText(trangThai);
        hideButton();
    }

    private void hideButton() {
        btnNhanBan.setVisible(false);
        btnGoiMon.setVisible(false);
        btnSapCho.setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private component.MyButton btnGoiMon;
    private component.MyButton btnNhanBan;
    private component.MyButton btnSapCho;
    private javax.swing.JLabel datCoc;
    private javax.swing.JLabel gioDen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel khachHang;
    private javax.swing.JPanel left;
    private javax.swing.JPanel right;
    private javax.swing.JLabel soNguoi;
    private javax.swing.JLabel trangThai;
    private javax.swing.JPanel wrapper;
    // End of variables declaration//GEN-END:variables

}
